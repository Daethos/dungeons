{"version":3,"sources":["components/NavBar/NavBar.jsx","utils/tokenService.js","utils/monsterApi.js","components/UserMonsters/UserMonsters.jsx","pages/UserProfile/UserProfile.jsx","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/ApiMonsterDetails/ApiMonsterDetails.jsx","components/ApiMonsterData/ApiMonsterData.jsx","components/ApiMonsters/ApiMonsters.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogOut","console","log","className","email","to","src","photoUrl","alt","id","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","BASE_URL","getAll","fetch","headers","tokenService","then","res","ok","json","response","Error","err","create","monster","method","body","stringify","Authorization","UserMonsters","monsters","useState","monstra","map","mon","Row","Col","style","width","index","name","height","size","type","hit_points","hit_dice","hit_points_roll","armor_class","challenge_rating","languages","speed","burrow","climb","fly","swim","walk","strength","dexterity","constitution","intelligence","wisdom","charisma","UserProfile","loggedUser","handleLogout","setMonsters","useEffect","monstersAPI","data","message","getMonsters","username","bio","signup","logout","login","creds","Headers","getUser","isPasswordMatch","passwordOne","passwordConf","SignUpPage","props","passwordError","setError","password","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","value","preventDefault","key","formData","FormData","append","forEach","item","userService","handleSignUpOrLogin","disable","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","required","label","files","Button","variant","disabled","error","LoginPage","ApiMonsterDetails","getMonstahUrl","monstroso","setMonstroso","monsterImage","setMonsterImage","setMonstra","monsterUrl","monsterName","useParams","handleMonster","handleSubmit","url","newData","includes","fetchUrls","monSrc","alignment","process","actions","desc","ApiMonsterData","monstah","ApiMonsters","monsterData","setMonsterData","setMonstahUrl","fetchMonsters","useCallback","results","monsterUrls","push","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3b2eb59a.chunk.js","sourcesContent":["import './NavBar.css'\r\nimport { Link } from 'react-router-dom';\r\nimport React from \"react\";\r\n\r\nexport default function NavBar({ user, handleLogOut }) {\r\n    console.log(user, \"user in NavBar!\");\r\n    return (\r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg bg-black\">\r\n        &nbsp;&nbsp;<span className=\"text-info\">{user?.email}</span>\r\n        <Link to=\"/\" className=\"nav-item\">\r\n            <img src={user?.photoUrl} alt={user?.photoUrl} id=\"nav-pic\" />\r\n        </Link>\r\n        &nbsp; | &nbsp;\r\n        <Link to=\"/Monsters\" className=\"btn btn-outline-info\">Monsters</Link>\r\n        &nbsp; | &nbsp;\r\n        <Link to=\"/Characters/New\" className=\"btn btn-outline-info nav-item\">New Ascean</Link>\r\n        &nbsp; | &nbsp;\r\n        <Link to=\"/User/Characters\" className=\"btn btn-outline-info nav-item\">Your Ascean</Link>\r\n        \r\n        &nbsp;&nbsp;<Link to=\"\" onClick={handleLogOut} className=\"btn btn-outline-danger\">Log Out</Link>\r\n        </nav>\r\n        {/* <nav className=\"navbar bg-black\">\r\n            <a className=\"btn btn-outline-danger\" href=\"/logout\">Logout</a>\r\n        </nav> */}\r\n        </div>\r\n    );\r\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\r\nconst BASE_URL = '/api/monsters/';\r\n\r\nexport async function getAll() {\r\n    return fetch(BASE_URL, {\r\n        headers: {\r\n        'Authorization': 'Bearer ' + tokenService.getToken()\r\n        }\r\n    })\r\n    .then((res) => {\r\n        if(res.ok) return res.json();\r\n        return res.json().then(response => {\r\n        console.log(response)\r\n        throw new Error(response.err)\r\n        })\r\n    });\r\n}\r\n\r\nexport async function create(monster) {\r\n    return fetch(BASE_URL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(monster),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Bearer \" + tokenService.getToken(),\r\n        \r\n        },\r\n        // options.headers = { 'Content-Type': 'application/json' };\r\n        // options.body = JSON.stringify(payload);\r\n    }).then((res) => {\r\n        if (res.ok) return res.json(); \r\n        // res.ok will be try if the http statusCode in the response is anything in the 200's\r\n        return res.json().then(response => {\r\n        console.log(response, '<- What response are you getting?')\r\n        throw new Error(response.err)\r\n        })\r\n    });\r\n}","import './UserMonsters.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default function UserMonsters({ monsters }) {\r\n    const [userCharactersState, setUserCharactersState] = useState(null);\r\n\r\n    let monstra = monsters.map((mon) => {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n            <div className=\"card bg-black col-1 offset-1 my-5\" style={{width: 30 + 'vw'}}>\r\n                <img src={process.env.PUBLIC_URL + '/images/' + mon.index + '.jpg'} alt={mon.name} style={{width: 30 + 'vw', height: 30 + 'vh'}} id=\"monster-image\" />\r\n                <div className=\"card-body bg-warning\">\r\n                <h1 className=\"card-title\">{mon.name}</h1>\r\n                <div className=\"card-text\">\r\n                <h2>{mon.size}</h2>\r\n                <h2>{mon.type}</h2>\r\n                <h2>Hit Points: {mon.hit_points}</h2>\r\n                <h2>Hit Dice: {mon.hit_dice}</h2>\r\n                <h2>Hit Points Roll: {mon.hit_points_roll}</h2>\r\n                <h2>Armor Class: {mon.armor_class}</h2>\r\n                <h2>Challenge Rating: {mon.challenge_rating}</h2>\r\n                <h2>Languages: {mon.languages}</h2>\r\n                {\r\n                mon.speed\r\n                ? <h2>Speed (Burrow): {\r\n                    mon.speed.burrow\r\n                    ? mon.speed.burrow\r\n                    : 'No Relevant Information'\r\n                }</h2>\r\n                : <h2>Speed (Climb): Error</h2>\r\n                }\r\n                {\r\n                mon.speed\r\n                ? <h2>Speed (Climb): {\r\n                    mon.speed.climb\r\n                    ? mon.speed.climb\r\n                    : 'No Relevant Information'\r\n                }</h2>\r\n                : <h2>Speed (Climb): Error</h2>\r\n                }\r\n                {\r\n                mon.speed\r\n                ? <h2>Speed (Flight): {\r\n                    mon.speed.fly\r\n                    ? mon.speed.fly\r\n                    : 'No Relevant Information'\r\n                }</h2>\r\n                : <h2>Speed (Flight): Error</h2>\r\n                }\r\n                {\r\n                mon.speed \r\n                ? <h2>Speed (Swim): {\r\n                    mon.speed.swim\r\n                    ? mon.speed.swim\r\n                    : 'No Relevant Information'\r\n                    }</h2>\r\n                : <h2>Speed (Swim): Error</h2>\r\n                }\r\n                {\r\n                mon.speed \r\n                ? <h2>Speed (Walk): {\r\n                    mon.speed.walk\r\n                    ? mon.speed.walk\r\n                    : 'No Relevant Information'\r\n                    }</h2>\r\n                : <h2>Speed (Walk): Error</h2>\r\n                }\r\n                <h2>Attributes</h2>\r\n                <h2>Strength: {mon.strength}</h2>\r\n                <h2>Dexterity: {mon.dexterity}</h2>\r\n                <h2>Constitution: {mon.constitution}</h2>\r\n                <h2>Intelligence: {mon.intelligence}</h2>\r\n                <h2>Wisdom: {mon.wisdom}</h2>\r\n                <h2>Charisma: {mon.charisma}</h2>\r\n                {/* {\r\n                mon.actions\r\n                ? <h2> {\r\n                    mon.actions[0]\r\n                    ? 'Actions (1): ' + mon.actions[0].name + ' - ' + mon.actions[0].desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>Actions (1): Error</h2>\r\n                }\r\n                {\r\n                mon.actions\r\n                ? <h2> {\r\n                    mon.actions[1]\r\n                    ? 'Actions (2): ' + mon.actions[1].name + ' - ' + mon.actions[1].desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>Actions (2): Error</h2>\r\n                }\r\n                {\r\n                mon.actions\r\n                ? <h2> {\r\n                    mon.actions[2]\r\n                    ? 'Actions (3): ' + mon.actions[2].name + ' - ' + mon.actions[2].desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>Actions (3): Error</h2>\r\n                }\r\n                {\r\n                mon.actions\r\n                ? <h2> {\r\n                    mon.actions[3]\r\n                    ? 'Actions (4): ' + mon.actions[3].name + ' - ' + mon.actions[3].desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>Actions (4): Error</h2>\r\n                }\r\n                {\r\n                mon.legendary_actions\r\n                ? <h2> {\r\n                    mon.legendary_actions[0]\r\n                    ? 'Legendary Action (1): ' + mon.legendary_actions[0].one.name + ' - ' + mon.legendary_actions[0].one.desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>legendary_actions (1): Error</h2>\r\n                }\r\n                {\r\n                mon.legendary_actions\r\n                ? <h2> {\r\n                    mon.legendary_actions[0]\r\n                    ? 'Legendary Action (2): ' + mon.legendary_actions[0].two.name + ' - ' + mon.legendary_actions[0].two.desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>legendary_actions (2): Error</h2>\r\n                }\r\n                {\r\n                mon.legendary_actions\r\n                ? <h2> {\r\n                    mon.legendary_actions[0]\r\n                    ? 'Legendary Action (3): ' + mon.legendary_actions[0].three.name + ' - ' + mon.legendary_actions[0].three.desc\r\n                    : ''\r\n                }</h2>\r\n                : <h2>legendary_actions (3): Error</h2>\r\n                } */}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"border border-black\">\r\n        {monstra}\r\n        \r\n        </div>\r\n    );\r\n}\r\n","import './UserProfile.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as monstersAPI from '../../utils/monsterApi';\r\nimport UserMonsters from '../../components/UserMonsters/UserMonsters';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\n\r\nexport default function UserProfile({ loggedUser, handleLogout }) {\r\n    const [monsters, setMonsters] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getMonsters() {\r\n            try {\r\n                const response = await monstersAPI.getAll();\r\n                console.log(response, ' <- the response in getMonsters')\r\n                setMonsters([...response.data])\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        }\r\n        getMonsters()\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className=\"border border-black\">\r\n            <NavBar user={loggedUser} handleLogout={handleLogout}/>\r\n            <img src={loggedUser.photoUrl} alt={loggedUser.username} id=\"loggedUser-pic\" />\r\n            <h5>{loggedUser.email}</h5>\r\n            <h2>Hello, {loggedUser.username}</h2>\r\n            <h3>Bio: {loggedUser.bio}</h3>\r\n            <UserMonsters monsters={monsters} loggedUser={loggedUser} />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n// I want to follow the logic of Jim's work with the PostCards and make a component for MonsterCards, probably on\r\n// Fresh go-round of concept in p4\r\n","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n  \n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n    bio: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  // initialized the react router hook, which allows you to programatically\n  // change routes, aka after our signup call in the handleSubmit\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // this stop the browser from submitting the form!\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({message: 'Passwords Must Match!', passwordError: true});\n    setError({message: '', passwordError: false})\n    // Create formData, so we can send over our file, using multipart/formdata header\n    // which sends over the basic inputs, and then the file\n\n    const formData = new FormData(); //< - this constructor from the browser allows us to create data\n    // now we can set key value pairs on the formData\n    formData.append(\"photo\", selectedFile);\n    // Line by line tactic\n    // formData.append('username', state.username);\n    // formData.append('email', state.email);\n    // and so on for the rest or our state\n\n    // A more robust way to generate the rest of the formData is using a loop!\n    // loop over our state object using a for ... in loop\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    console.log(\n      formData,\n      \" <- form Data, you cant see this!\",\n      \"you have to loop over it\"\n    );\n    console.log(\n      formData.forEach((item) => console.log(item)),\n      \" < This lets you see the key values in formData\"\n    );\n\n    try {\n      await userService.signup(formData); // THIS IS WHERE WE ARE MAKING A REQUEST TO THE SERVER, the response is handled inside function .thens, go at the look at the function\n      // After the line above,\n      // the new token is in localstorage,\n      // so now we can update state\n      props.handleSignUpOrLogin(); // <- call the function from the app component\n      // that gets the token from localstorage, and sets in our App's state\n\n      // navigate whereever after the user has logged in\n      navigate(\"/\"); // this accepts a route you defined in your App.js\n    } catch (err) {\n      // the error comes from the throw statement in the signup functions\n      // .then\n      console.log(err);\n      setError({message: err.message, passwordError: false});\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n  const disable = state.password !== state.passwordConf;\n  return (\n    <div id=\"signup\" className=\"border border-black bg-black text-white\">\n        <div className=\"form-container\">\n        <h2>Sign Up</h2>\n      <Form onSubmit={handleSubmit}>\n      {/* <form autoComplete=\"off\" onSubmit={handleSubmit}> */}\n      <Form.Group className=\"my-2\" controlId=\"formBasicUsername\">\n      <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"username\"\n            value={state.username}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicEmail\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicPasswordConfirm\">\n        <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            name=\"passwordConf\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={state.passwordConf}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicUser\">\n          <Form.Label>Your Bio Here!</Form.Label>\n          <Form.Control\n            type=\"textarea\"\n            label=\"bio\"\n            name=\"bio\"\n            placeholder=\"Tell us more about yourself...\"\n            value={state.bio}\n            onChange={handleChange}\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicPhoto\">\n          <Form.Label>Profile Picture!</Form.Label>\n            <Form.Control\n              type=\"file\"\n              name=\"photoUrl\"\n              placeholder=\"upload image\"\n              onChange={handleFileInput}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"info\" disabled={disable} className=\"btn\">\n            SIGN UP\n          </Button>\n      {/* </form> */}\n      </Form>\n    </div>\n    <p className=\"error-message\">&nbsp;{state.error}</p>\n  </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n  return (\n    <div>\n      <div className=\"form-container\">\n        <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"my-2\" controlId=\"formBasicEmail\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Form.Group className=\"my-2\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n          />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"info\" className=\"btn\">\n            SIGN UP\n          </Button>\n          </Form>\n      </div>\n      <p className=\"error-message\">&nbsp;{error}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport './ApiMonsterDetails.css';\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport * as monstersAPI from '../../utils/monsterApi';\r\nimport AddMonster from '../AddMonster/AddMonster';\r\n\r\n\r\n\r\nexport default function ApiMonsterDetails({ monster, key, getMonstahUrl, loggedUser }) {\r\n    const [monstroso, setMonstroso] = useState({});\r\n    const [monsterImage, setMonsterImage] = useState('');\r\n    const [monstra, setMonstra] = useState([])\r\n    const monsterUrl = 'https://www.dnd5eapi.co/api/monsters/'\r\n\r\n    const { monsterName } = useParams();\r\n    getMonstahUrl(monsterName);\r\n\r\n    useEffect(() => {\r\n        const url = `${monsterUrl}${monsterName}`;\r\n\r\n        async function fetchUrls() {\r\n            console.log(monsterName, '<- Monster Data in Monster Detail')\r\n            try {\r\n                \r\n                const res = await fetch(url);\r\n                    console.log(res);\r\n                    if (res.ok) {\r\n                        const newData = await res.json();\r\n                        console.log(newData, '<- What on earth are you?');\r\n                        console.log(newData.index, '<-Can I use you?')\r\n                        let monSrc = ''; \r\n                        monSrc = '/images/' + newData.index + '.jpg';\r\n                        console.log(monSrc, '<-Hopefully the image src')\r\n                        setMonsterImage(monSrc);\r\n                        setMonstroso(newData);\r\n                        console.log(monstroso, '<- the monstroso in question?')\r\n                    }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchUrls();\r\n    }, []);\r\n\r\n    async function handleMonster(monstroso) {\r\n        try {\r\n            console.log(monstroso, '<- Monstroso in handleMonster start')\r\n            const response = await monstersAPI.create(monstroso);\r\n            console.log(response, '<- Response in handleMonster');\r\n            setMonstra([response.data, ...monstra]);\r\n        } catch (err) {\r\n            console.log(err.message, '<- This is the error in handleMonster')\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const url = `${monsterUrl}${monsterName}`;\r\n\r\n        async function fetchUrls() {\r\n            console.log(monsterName, '<- Monster Data in Monster Detail')\r\n            try {\r\n                \r\n                const res = await fetch(url);\r\n                    console.log(res);\r\n                    if (res.ok) {\r\n                        const newData = await res.json();\r\n                        console.log(newData, '<- Can you be my favorite Monster?');\r\n                        const formData = new FormData();\r\n                        let required = ['special_abilities', 'proficiencies', 'damage_vulnerabilities', 'damage_resistances',  'damage_immunities', 'condition_immunities', 'actions', 'senses', 'legendary_actions', 'speed', 'index', 'name', 'size', 'type', 'alignment', 'armor_class', 'hit_points', 'hit_dice', 'hit_points_roll', 'strength', 'dexterity', 'constitution', 'intelligence', 'wisdom', 'charisma', 'languages', 'challenge_rating', 'xp']\r\n                        for (let key in monstroso) {\r\n                            if (required.includes(key)) {\r\n                                formData[key] = monstroso[key]\r\n                            }\r\n                        }\r\n                        console.log(\r\n                            formData.forEach((item) => console.log(item)),\r\n                            '<- The current spec of formData');\r\n                            handleMonster(formData); // formData is the data we want to send to the server!\r\n                    }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchUrls();\r\n    }\r\n    \r\n    return (\r\n    <div className=\"border border-black\">\r\n        {/* <AddMonster monstroso={monstroso} handleMonster={handleMonster} /> */}\r\n        {\r\n            monstra\r\n            ? <button value={monstroso} type=\"submit\" className=\"btn btn-danger\" disabled>\r\n            {monstroso.name} Is Yours Now!\r\n            </button>\r\n            : <form onSubmit={handleSubmit}>\r\n            <button value={monstroso} type=\"submit\" className=\"btn btn-success\">\r\n            Add {monstroso.name} ?\r\n            </button>\r\n        </form>\r\n        }\r\n        <form onSubmit={handleSubmit}>\r\n            <button value={monstroso} type=\"submit\" className=\"btn btn-success\">\r\n            Add {monstroso.name} ?\r\n            </button>\r\n        </form>\r\n        <h1>Monster: {monstroso.name}</h1>\r\n        <h2>Type: {monstroso.type}</h2>\r\n        <h2>Alignment: {monstroso.alignment}</h2>\r\n        <img src={process.env.PUBLIC_URL + monsterImage} alt={monstroso.name} id=\"monster-image\" />\r\n        <h2>Size: {monstroso.size}</h2>\r\n        {\r\n            monstroso.speed\r\n            ? <h2>Speed (Burrow): {\r\n                monstroso.speed.burrow\r\n                ? monstroso.speed.burrow\r\n                : 'No Relevant Information'\r\n            }</h2>\r\n            : <h2>Speed (Climb): Error</h2>\r\n        }\r\n        {\r\n            monstroso.speed\r\n            ? <h2>Speed (Climb): {\r\n                monstroso.speed.climb\r\n                ? monstroso.speed.climb\r\n                : 'No Relevant Information'\r\n            }</h2>\r\n            : <h2>Speed (Climb): Error</h2>\r\n        }\r\n        {\r\n            monstroso.speed\r\n            ? <h2>Speed (Flight): {\r\n                monstroso.speed.fly\r\n                ? monstroso.speed.fly\r\n                : 'No Relevant Information'\r\n            }</h2>\r\n            : <h2>Speed (Flight): Error</h2>\r\n        }\r\n        {\r\n            monstroso.speed \r\n            ? <h2>Speed (Swim): {\r\n                monstroso.speed.swim\r\n                ? monstroso.speed.swim\r\n                : 'No Relevant Information'\r\n                }</h2>\r\n            : <h2>Speed (Swim): Error</h2>\r\n        }\r\n        {\r\n            monstroso.speed \r\n            ? <h2>Speed (Walk): {\r\n                monstroso.speed.walk\r\n                ? monstroso.speed.walk\r\n                : 'No Relevant Information'\r\n                }</h2>\r\n            : <h2>Speed (Walk): Error</h2>\r\n        }\r\n        <h2>Hit Points: {monstroso.hit_points}</h2>\r\n        <h2>Hit Dice: {monstroso.hit_dice}</h2>\r\n        <h2>Armor Class: {monstroso.armor_class}</h2>\r\n        <h2>Challenge Rating: {monstroso.challenge_rating}</h2>\r\n        <h2>Languages: {monstroso.languages}</h2>\r\n\r\n        <h2>Attributes</h2>\r\n        <h2>Strength: {monstroso.strength}</h2>\r\n        <h2>Dexterity: {monstroso.dexterity}</h2>\r\n        <h2>Constitution: {monstroso.constitution}</h2>\r\n        <h2>Intelligence: {monstroso.intelligence}</h2>\r\n        <h2>Wisdom: {monstroso.wisdom}</h2>\r\n        <h2>Charisma: {monstroso.charisma}</h2>\r\n\r\n        {\r\n            monstroso.actions\r\n            ? <h2> {\r\n                monstroso.actions[0]\r\n                ? 'Actions (1): ' + monstroso.actions[0].name + ' - ' + monstroso.actions[0].desc\r\n                : ''\r\n            }</h2>\r\n            : <h2>Actions (1): Error</h2>\r\n        }\r\n        {\r\n            monstroso.actions\r\n            ? <h2> {\r\n                monstroso.actions[1]\r\n                ? 'Actions (2): ' + monstroso.actions[1].name + ' - ' + monstroso.actions[1].desc\r\n                : ''\r\n            }</h2>\r\n            : <h2>Actions (2): Error</h2>\r\n        }\r\n        {\r\n            monstroso.actions\r\n            ? <h2> {\r\n                monstroso.actions[2]\r\n                ? 'Actions (3): ' + monstroso.actions[2].name + ' - ' + monstroso.actions[2].desc\r\n                : ''\r\n            }</h2>\r\n            : <h2>Actions (3): Error</h2>\r\n        }\r\n        {\r\n            monstroso.actions\r\n            ? <h2> {\r\n                monstroso.actions[3]\r\n                ? 'Actions (4): ' + monstroso.actions[3].name + ' - ' + monstroso.actions[3].desc\r\n                : ''\r\n            }</h2>\r\n            : <h2>Actions (4): Error</h2>\r\n        }\r\n                \r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ApiMonsterDetails from '../ApiMonsterDetails/ApiMonsterDetails';\r\n\r\nexport default function ApiMonsterData({ monsters, getMonstahUrl }) {\r\n\r\n    return (\r\n        <div>\r\n        {monsters.map((monster) => {\r\n            return (\r\n                // <ApiMonsterDetails \r\n                //     monster={monster} \r\n                //     key={monster.index}\r\n                //     loggedUser={loggedUser}\r\n                // />\r\n                <Link \r\n                    to={\"/Monster/\" + monster.key} \r\n                    key={monster.key} \r\n                    monstah={monster}\r\n                    getMonstahUrl={getMonstahUrl} \r\n                    className=\"btn btn-danger btn-lg p-2 my-1\">\r\n                        {monster.name}\r\n                </Link>\r\n                );\r\n        })}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport ApiMonsterData from \"../ApiMonsterData/ApiMonsterData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ApiMonsters() {\r\n\r\n    const [monsterData, setMonsterData] = useState(null);\r\n    const [monstahUrl, setMonstahUrl] = useState('');\r\n    const [monsters, setMonsters] = useState([])\r\n    const [submitting, setSubmitting] = useState(false);\r\n    let monster = [];\r\n\r\n    const monsterUrl = 'https://www.dnd5eapi.co/api/monsters/';\r\n\r\n    // useCallback basically CACHES our fetchMonsters function, so it doesn't change between\r\n    // re-renders of the comment. Const fetchMonsters = useCallback(async () => { }, [dependency: monsterData])\r\n    // const makes it so it's not a 'new' function on re-render... Provided that the monsterData did not change\r\n    const fetchMonsters = useCallback(async () => {\r\n        try {\r\n            const response = await fetch(monsterUrl);\r\n            console.log(response);\r\n            if (response.ok) {\r\n            const data = await response.json();\r\n            console.log(data.results, '<- Monster Data!');\r\n            // setMonsterData(data.results);\r\n            let monsterArr = [];\r\n            let monsterUrls = [];\r\n            monsterArr = data.results;\r\n            // console.log(monsterArr,'<- monsterArr Post Set State')\r\n            monsterArr.forEach((monster) => {\r\n                const monstah = {\r\n                    key: monster.index,\r\n                    name: monster.name,\r\n                    index: monsterUrl+monster.index,\r\n                }\r\n                // console.log(monstah, '<- New Monstah to consume!')\r\n                monsterUrls.push(monstah);  \r\n                // console.log(monsterUrls, '<- The full array of Monstahs!')\r\n                \r\n            });\r\n            \r\n                setMonsterData(monsterUrls) // .then((res) => { console.log(res, '<-res embedded')})\r\n                console.log(monsterUrls,'<- monsterUrls Post Set State')\r\n            }\r\n        } catch (err) {\r\n            console.log(err, '<- Registered Error');\r\n        }\r\n    }, [monsterData])\r\n\r\n    useEffect(() => {\r\n        console.log('We have lift off!')\r\n        fetchMonsters();\r\n    }, [monsterData, fetchMonsters])\r\n\r\n    function getMonstahUrl(url) {\r\n        setMonstahUrl(url);\r\n    }\r\n\r\n    return (\r\n        <div className=\"border border-black\">\r\n            <ApiMonsterData monster={monsterData} getMonstahUrl={getMonstahUrl} />\r\n        </div>\r\n    )\r\n    \r\n}","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport UserProfile from '../UserProfile/UserProfile';\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport userService from \"../../utils/userService\";\nimport ApiMonsters from \"../../components/ApiMonsters/ApiMonsters\";\nimport UserMonsters from \"../../components/UserMonsters/UserMonsters\";\nimport ApiMonsterDetails from \"../../components/ApiMonsterDetails/ApiMonsterDetails\";\nimport ApiMonsterData from \"../../components/ApiMonsterData/ApiMonsterData\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n\n  // const [monsterData, setMonsterData] = useState(null);\n  // const [monstahUrl, setMonstahUrl] = useState('');\n\n  // const monsterUrl = 'https://www.dnd5eapi.co/api/monsters/';\n\n  // useEffect(() => {\n  //   async function fetchMonsters() {\n  //     try {\n  //       const response = await fetch(monsterUrl);\n  //       console.log(response);\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         console.log(data.results, '<- Monster Data!');\n  //         // setMonsterData(data.results);\n  //         let monsterArr = [];\n  //         let monsterUrls = [];\n  //         monsterArr = data.results;\n  //         // console.log(monsterArr,'<- monsterArr Post Set State')\n  //         monsterArr.forEach((monster) => {\n  //             const monstah = {\n  //               key: monster.index,\n  //               name: monster.name,\n  //               index: monsterUrl+monster.index,\n  //             }\n  //             // console.log(monstah, '<- New Monstah to consume!')\n  //             monsterUrls.push(monstah);  \n  //             // console.log(monsterUrls, '<- The full array of Monstahs!')\n              \n  //         });\n  //           setMonsterData(monsterUrls) // .then((res) => { console.log(res, '<-res embedded')})\n  //           console.log(monsterUrls,'<- monsterUrls Post Set State')\n  //       }\n  //     } catch (err) {\n  //       console.log(err, '<- Registered Error');\n  //     }\n  //   }\n    \n  //   fetchMonsters();\n    \n  //   // const monstra = async () => {\n  //   //   await fetchMonsters()\n  //   //     // .then((result) => {\n  //   //     //   console.log(result, '<- This is the monstra function')\n  //   //     //   setMonsters([result])\n  //   //     // })\n  //   //     console.log(monstra, '<- Does this make sense?')\n  //   // }\n  //   // monstra();\n  // }, [])\n\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  // function getMonstahUrl(url) {\n  //   setMonstahUrl(url);\n  // }\n\n  if (user) {\n    return (\n      // <>\n      // <NavBar user={user} setUser={setUser} getMonstahUrl={getMonstahUrl} />\n      <Routes>\n        <Route path=\"/\" element={<UserProfile loggedUser={user} handleSignUpOrLogin={handleSignUpOrLogin} handleLogout={handleLogout} />} />\n        <Route path=\"/Monsters\" element={<ApiMonsters user={user} />} />\n        <Route path=\"/Monsters/Data\" element={<ApiMonsterData user={user} />} />\n        <Route path=\"/Monsters/:monsterName\" element={<ApiMonsterDetails user={user} />} />\n        <Route path=\"/:id/monster\" element={<UserMonsters loggedUser={user} />} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n      </Routes>\n      // </>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}